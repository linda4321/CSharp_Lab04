<UserControl x:Class="Lab04Magur.Views.PeopleListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d">
    
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Button Content="Add person" Grid.Column="0" Command="{Binding AddPersonCommand}" Height="33" VerticalAlignment="Top" Margin="0,25,0,0"/>

        <Button  Content="Sort by" Grid.Column="0" Height="33" Name="buttonSort" VerticalAlignment="Top" Click="DisplayContextMenu" Margin="0,97,0,0" >
            <Button.ContextMenu>
                <ContextMenu >
                    <MenuItem Header="First name" Command="{Binding SortBy}" CommandParameter="FirstName"/>
                    <MenuItem Header="Last name" Command="{Binding SortBy}" CommandParameter="LastName"/>
                    <MenuItem Header="Email" Command="{Binding SortBy}" CommandParameter="Email"/>
                    <MenuItem Header="Birth date" Command="{Binding SortBy}" CommandParameter="DateOfBirth"/>
                    <MenuItem Header="Western zodiac" Command="{Binding SortBy}" CommandParameter="WesternZodiac"/>
                    <MenuItem Header="Chineese zodiac" Command="{Binding SortBy}" CommandParameter="ChineeseZodiac"/>
                    <MenuItem Header="Is adult" Command="{Binding SortBy}" CommandParameter="IsAdult"/>
                    <MenuItem Header="Is birthday" Command="{Binding SortBy}" CommandParameter="IsBirthday"/>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <Button  Content="Filter by" Grid.Column="0" Height="33" Name="buttonFilter" VerticalAlignment="Top" Command="{Binding ShowFilter}" Margin="0,163,0,0"></Button>
        <Button  Content="Show all" Grid.Column="0" Height="33" Name="buttonShowAll" VerticalAlignment="Top" Command="{Binding ShowAll}" Margin="0,225,0,-62"></Button>

        <DataGrid  Name="PeopleDataGrid" Grid.Column="1" ItemsSource="{Binding People}" AutoGenerateColumns="False" SelectionMode="Single">
            <DataGrid.Resources>
                <Style x:Key="datagridElemStyle" TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="datePickerStyle" TargetType="{x:Type DatePicker}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="First name" Binding="{Binding FirstName, Mode=TwoWay, ValidatesOnExceptions=True}" ElementStyle="{StaticResource datagridElemStyle}" IsReadOnly="False" ></DataGridTextColumn>
                <DataGridTextColumn Header="Last name" Binding="{Binding LastName, Mode=TwoWay, ValidatesOnExceptions=True}" ElementStyle="{StaticResource datagridElemStyle}" IsReadOnly="False"></DataGridTextColumn>
                <DataGridTextColumn Header="E-mail" Binding="{Binding Email, Mode=TwoWay, ValidatesOnExceptions=True}" ElementStyle="{StaticResource datagridElemStyle}" IsReadOnly="False"></DataGridTextColumn>
                <DataGridTemplateColumn Header="Date of birth" IsReadOnly="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDateFormat="Short" SelectedDate="{Binding DateOfBirth, Mode=TwoWay, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource datePickerStyle}"></DatePicker>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Western zodiac" Binding="{Binding WesternZodiac}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="Chineese zodiac" Binding="{Binding ChineeseZodiac}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="Is adult" Binding="{Binding IsAdult}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="Is birthday today" Binding="{Binding IsBirthday}" IsReadOnly="True"></DataGridTextColumn>

                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DeleteItem}" 
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}">
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
